<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <PublishSingleFile>true</PublishSingleFile>
    <SelfContained>true</SelfContained>
    <PublishReadyToRun>true</PublishReadyToRun>
    <PublishAot>true</PublishAot>
    <AssemblyName>snapx-ui</AssemblyName>
    <AssemblyTitle>SnapX UI</AssemblyTitle>
    <ApplicationIcon>Assets\SnapX_Icon.ico</ApplicationIcon>
    <InvariantGlobalization>true</InvariantGlobalization>
    <!-- Recommended Avalonia trimming settings for Native AOT -->
    <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
    <BuiltInComInteropSupport>false</BuiltInComInteropSupport>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <TrimMode>link</TrimMode>
    <AvaloniaVersion>11.2.4</AvaloniaVersion>
    <!-- After investigation, this needs to be an absolute path. It should be set by our build script later down the road. -->
    <!-- That way, you hopefully wouldn't need to have the snapx-ui executable right alongside it's .so/.dll/.dylib -->
    <AvaloniaNativeLibraryPath>/usr/local/lib/snapx</AvaloniaNativeLibraryPath>
    <!-- Packagers: Do not modify the AssemblyName, it will break the compilation of XAML that depends on it being called snapx-ui. Instead create a executable shell script that calls snapx-ui -->
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DebugSymbols>false</DebugSymbols>
    <DebugType>none</DebugType>
    <!-- End users expect for a terminal not to open when running our application. -->
    <!-- During development on Windows though, this is very helpful. -->
    <OutputType>WinExe</OutputType>
  </PropertyGroup>
  <ItemGroup>
    <AvaloniaResource Include="Assets\**" />
    <AvaloniaResource Include="*.ico" />
    <AvaloniaResource Include="*.xaml" />
    <AvaloniaResource Include="..\SnapX.Core\Resources\SnapX_Logo.png">
      <Link>SnapX_Logo.png</Link>
    </AvaloniaResource>
    <TrimmerRootDescriptor Include="Roots.xml" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Avalonia" Version="$(AvaloniaVersion)" />
    <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)" />
    <PackageReference Include="Avalonia.Markup.Xaml.Loader" Version="$(AvaloniaVersion)" />
    <PackageReference Include="Avalonia.Fonts.Inter" Version="$(AvaloniaVersion)" />
    <PackageReference Include="FluentAvaloniaUI" Version="2.2.0" />
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="$(AvaloniaVersion)" />
    <PackageReference Include="LibVLCSharp.Avalonia" Version="3.9.2" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('OSX'))" Include="VideoLAN.LibVLC.Mac" Version="3.1.3.1" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('Windows'))" Include="VideoLAN.LibVLC.Windows" Version="3.0.21" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('Windows'))" Include="VideoLAN.LibVLC.Windows.GPL" Version="3.0.21" />
>>>>>>> origin/develop
    <OutputType>Exe</OutputType>
    <AvaloniaVersion>11.2.4</AvaloniaVersion>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DebugSymbols>false</DebugSymbols>
    <DebugType>none</DebugType>
    <!-- End users expect for a terminal not to open when running our application. -->
    <!-- During development on Windows though, this is very helpful. -->
    <OutputType>WinExe</OutputType>
  </PropertyGroup>
    <PackageReference Include="LibVLCSharp.Avalonia" Version="3.9.2" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('OSX'))" Include="VideoLAN.LibVLC.Mac" Version="3.1.3.1" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('Windows'))" Include="VideoLAN.LibVLC.Windows" Version="3.0.21" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('Windows'))" Include="VideoLAN.LibVLC.Windows.GPL" Version="3.0.21" />
    <ProjectReference Include="..\SnapX.Core\SnapX.Core.csproj" />
    <ProjectReference Include="..\SnapX.CommonUI\SnapX.CommonUI.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Controls\" />
  </ItemGroup>
</Project>
