name: Build SnapX

on:
  push:
    branches:
      - "**"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    paths-ignore:
      - "**/*.md"
      - "**/*.spec"
      - "**/*.gitignore"
      - "**/*.gitattributes"

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ${{matrix.os}}
    timeout-minutes: 65

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest ]
        configuration:
          - Release
          - Debug

    env:
      SOLUTION_FILE_PATH: SnapX.slnx
      ASSEMBLY_INFO_PATH: Directory.build.props

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Cache .NET NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            C:\Users\runner\.nuget\packages
          key: ${{ runner.os }}-${{ runner.arch }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      # Needed for offline building :3
      - name: Upload Source With Dependencies
        if: matrix.configuration == 'Debug' && runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: SnapX-Vendored-Source-${{ runner.arch }}
          path: .
          include-hidden-files: false
          compression-level: 9

      - name: Publish
        if: matrix.os == 'windows-latest'
        run: |
          ./build.ps1 --configuration ${{ matrix.configuration }}
      - name: Install NativeAOT Linux Deps
        if: runner.os == 'Linux'
        run: "sudo apt update && sudo apt install -y clang zlib1g-dev libcurl4-openssl-dev"
      - name: Publish
        if: matrix.os != 'windows-latest'
        run: ./build.sh --configuration ${{ matrix.configuration }}

      - name: Upload Publish artifact (CLI)
        uses: actions/upload-artifact@v4
        with:
          name: SnapX-CLI-${{ matrix.configuration }}-${{ runner.os }}-${{ runner.arch }}
          path: "Output/snapx"
          compression-level: 9
          if-no-files-found: error
      - name: Upload Publish artifact (Avalonia)
        uses: actions/upload-artifact@v4
        with:
          name: SnapX-Avalonia-${{ matrix.configuration }}-${{ runner.os }}-${{ runner.arch }}
          path: "Output/snapx-ui"
          compression-level: 9
          if-no-files-found: error
      - name: Upload Publish artifact (GTK4)
        uses: actions/upload-artifact@v4
        if: runner.os == 'Linux'
        with:
          name: SnapX-GTK4-${{ matrix.configuration }}-${{ runner.os }}-${{ runner.arch }}
          path: "Output/snapx-gtk"
          compression-level: 9
          if-no-files-found: error
